<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on Jörn Ahrens</title>
		<link>/posts/</link>
		<description>Recent content in Posts on Jörn Ahrens</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<lastBuildDate>Mon, 23 Dec 2019 13:55:15 +0100</lastBuildDate>
		<atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>A couple of scripts for Emulator in the CI system</title>
			<link>/posts/genymotion-to-emulator/</link>
			<pubDate>Mon, 23 Dec 2019 13:55:15 +0100</pubDate>
			
			<guid>/posts/genymotion-to-emulator/</guid>
			<description>Follow this path: Our Journey from Genymotion to the Android Emulator
This contains a couple of useful scripts to automate AVD management and such.</description>
			<content type="html"><![CDATA[<p>Follow this path: <a href="https://pspdfkit.com/blog/2019/our-journey-from-genymotion-to-the-android-emulator/">Our Journey from Genymotion to the Android Emulator</a></p>
<p>This contains a couple of useful scripts to automate AVD management and such.</p>
]]></content>
		</item>
		
		<item>
			<title>Android Screenshot Script</title>
			<link>/posts/android-screenshot-script/</link>
			<pubDate>Mon, 19 Mar 2018 20:51:41 +0100</pubDate>
			
			<guid>/posts/android-screenshot-script/</guid>
			<description>Currently I&#39;m trying a lot of automated UI testing on emulators.
This could be really helpful in the near future:
adb-screenshot.sh</description>
			<content type="html"><![CDATA[<p>Currently I'm trying a lot of automated UI testing on emulators.</p>
<p>This could be really helpful in the near future:</p>
<p><a href="https://gist.github.com/hkurokawa/75b44564cc1491b5f4a2">adb-screenshot.sh</a></p>
]]></content>
		</item>
		
		<item>
			<title>Ktor - Server Framework</title>
			<link>/posts/ktor/</link>
			<pubDate>Fri, 26 Jan 2018 19:36:50 +0100</pubDate>
			
			<guid>/posts/ktor/</guid>
			<description>Just wanted to note ktor, a really nice kotlin framework to easily create server applications. For example, defining a REST API, looks as simple as this:
install(Routing) { get(&amp;quot;/foo&amp;quot;) { call.respondText(&amp;quot;bar&amp;quot;) } route(&amp;quot;api&amp;quot;) { intercept(ApplicationCallPipeline.Infrastructure) { AuthCheckInterceptor.intercept(this) } route(&amp;quot;cars&amp;quot;) { get { ListCarsHandler().doIt(this) } } } } Check their website or the github page</description>
			<content type="html"><![CDATA[<p>Just wanted to note ktor, a really nice kotlin framework to easily create server applications. For example, defining a REST API, looks as simple as this:</p>
<pre><code>install(Routing) {
    get(&quot;/foo&quot;) {
        call.respondText(&quot;bar&quot;)
    }
    route(&quot;api&quot;) {
        intercept(ApplicationCallPipeline.Infrastructure) {
            AuthCheckInterceptor.intercept(this)
        }
        route(&quot;cars&quot;) {
            get {
                ListCarsHandler().doIt(this)
            }
        }
    }
}
</code></pre><p>Check <a href="http://ktor.io/">their website</a> or the <a href="https://github.com/ktorio/ktor">github page</a></p>
]]></content>
		</item>
		
		<item>
			<title>Dart Client Generator for swagger</title>
			<link>/posts/dart-swagger/</link>
			<pubDate>Tue, 23 Jan 2018 20:42:54 +0100</pubDate>
			
			<guid>/posts/dart-swagger/</guid>
			<description>I&#39;m really proud that I successfully did my first open-source contribution to a &amp;ldquo;relevant&amp;rdquo; project. While trying to create a swagger client library for the dart language, I noticed, that the generated code wasn&#39;t working for Flutter. The reason for this is the lack of dart:mirrors support in the flutter framework. The generated code was using dartson which relies on dart:mirrors.
I reworked the dart client that it doesn&#39;t rely on dartson, but works without any further dependencies (pull request).</description>
			<content type="html"><![CDATA[<p>I'm really proud that I successfully did my first open-source contribution to a &ldquo;relevant&rdquo; project. While trying to create a <a href="https://swagger.io/">swagger</a> client library for the dart language, I noticed, that the generated code wasn't working for <a href="https://flutter.io/">Flutter</a>. The reason for this is the lack of <a href="https://api.dartlang.org/stable/1.24.3/dart-mirrors/dart-mirrors-library.html">dart:mirrors</a> support in the flutter framework. The generated code was using <a href="https://pub.dartlang.org/packages/dartson">dartson</a> which relies on <code>dart:mirrors</code>.</p>
<p>I reworked the dart client that it doesn't rely on dartson, but works without any further dependencies (<a href="https://github.com/swagger-api/swagger-codegen/pull/7418">pull request</a>).</p>
<p><img src="https://s3-eu-central-1.amazonaws.com/android-recollections-assets/wp-content/uploads/2018/01/23221426/Screen-Shot-2018-01-23-at-22.11.36.png" alt="Screenshot pull request" /></p>
<p>I know, +8.000 lines doesn't sound good, but this is the generated sample code for a flutter app mostly.</p>
]]></content>
		</item>
		
		<item>
			<title>Git Aliases</title>
			<link>/posts/git-aliases/</link>
			<pubDate>Tue, 23 Jan 2018 20:39:12 +0100</pubDate>
			
			<guid>/posts/git-aliases/</guid>
			<description>Shell aliases $ alias | grep git alias delete-merged-branches=&#39;git branch --merged | grep -v &#39;\&#39;&#39;\*&#39;\&#39;&#39; | xargs -n 1 git branch -d&#39; alias g=&#39;git status&#39; alias gcam=&#39;git commit -am&#39; alias gd=&#39;git diff&#39; alias gf=&#39;git fetch&#39; alias git=&#39;hub&#39; alias gl=&#39;git pull --prune&#39; alias gp=&#39;git push&#39; alias gpoh=&#39;git push -u origin HEAD&#39; alias gpr=&#39;git pull-request&#39; git aliases [alias] co = checkout please = push --force-with-lease amend = commit --amend --no-edit unstage = reset - </description>
			<content type="html"><![CDATA[<h3 id="shell-aliases">Shell aliases</h3>
<pre><code>$ alias | grep git
alias delete-merged-branches='git branch --merged | grep -v '\''\*'\'' | xargs -n 1 git branch -d'
alias g='git status'
alias gcam='git commit -am'
alias gd='git diff'
alias gf='git fetch'
alias git='hub'
alias gl='git pull --prune'
alias gp='git push'
alias gpoh='git push -u origin HEAD'
alias gpr='git pull-request'
</code></pre><h3 id="git-aliases">git aliases</h3>
<pre><code>[alias]
co = checkout
please = push --force-with-lease
amend = commit --amend --no-edit
unstage = reset -
</code></pre>]]></content>
		</item>
		
		<item>
			<title>Bash get current directory</title>
			<link>/posts/bash-current-dir/</link>
			<pubDate>Thu, 30 Mar 2017 22:35:51 +0100</pubDate>
			
			<guid>/posts/bash-current-dir/</guid>
			<description>Bash, get directory where the script is located:
SCRIPT_SRC_DIR=&amp;quot;$( cd &amp;quot;$( dirname &amp;quot;${BASH_SOURCE[0]}&amp;quot; )&amp;quot; &amp;amp;&amp;amp; pwd )&amp;quot; </description>
			<content type="html"><![CDATA[<p>Bash, get directory where the script is located:</p>
<pre><code>SCRIPT_SRC_DIR=&quot;$( cd &quot;$( dirname &quot;${BASH_SOURCE[0]}&quot; )&quot; &amp;&amp; pwd )&quot;
</code></pre>]]></content>
		</item>
		
		<item>
			<title>Create an AVD from CLI</title>
			<link>/posts/avd-from-commandline/</link>
			<pubDate>Wed, 15 Mar 2017 10:55:59 +0100</pubDate>
			
			<guid>/posts/avd-from-commandline/</guid>
			<description>I always struggle googling this, so that&#39;s why it&#39;s here for my future me:
$ ~/.android-sdk/tools/android create avd -n api-22 --target &amp;quot;Google Inc.:Google APIs:22&amp;quot; -b google_apis/x86_64 --force -c 512M -s 720x1280 $ echo &amp;quot;disk.dataPartition.size=1024MB&amp;quot; &amp;gt;&amp;gt; ~/.android/avd/api-22.avd/config.ini $ echo &amp;quot;hw.lcd.density=280&amp;quot; &amp;gt;&amp;gt; ~/.android/avd/api-22.avd/config.ini $ echo &amp;quot;hw.ramSize=1536&amp;quot; &amp;gt;&amp;gt; ~/.android/avd/api-22.avd/config.ini $ echo &amp;quot;hw.keyboard=yes&amp;quot; &amp;gt;&amp;gt; ~/.android/avd/api-22.avd/config.ini $ echo &amp;quot;showDeviceFrame=no&amp;quot; &amp;gt;&amp;gt; ~/.android/avd/api-22.avd/config.ini $ echo &amp;quot;skin.dynamic=yes&amp;quot; &amp;gt;&amp;gt; ~/.android/avd/api-22.avd/config.ini $ echo &amp;quot;skin.path=_no_skin&amp;quot; &amp;gt;&amp;gt; ~/.android/avd/api-22.avd/config.ini $ echo &amp;quot;skin.path.backup=_no_skin&amp;quot; &amp;gt;&amp;gt; ~/.</description>
			<content type="html"><![CDATA[<p>I always struggle googling this, so that's why it's here for my future me:</p>
<pre><code>$ ~/.android-sdk/tools/android create avd -n api-22 --target &quot;Google Inc.:Google APIs:22&quot; -b google_apis/x86_64 --force -c 512M -s 720x1280
$ echo &quot;disk.dataPartition.size=1024MB&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;hw.lcd.density=280&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;hw.ramSize=1536&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;hw.keyboard=yes&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;showDeviceFrame=no&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;skin.dynamic=yes&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;skin.path=_no_skin&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;skin.path.backup=_no_skin&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
$ echo &quot;avd.ini.encoding=UTF-8&quot; &gt;&gt; ~/.android/avd/api-22.avd/config.ini
</code></pre>]]></content>
		</item>
		
		<item>
			<title>6 tips to speed up your Gradle build</title>
			<link>/posts/speed-up-gradle/</link>
			<pubDate>Sat, 27 Feb 2016 09:50:18 +0100</pubDate>
			
			<guid>/posts/speed-up-gradle/</guid>
			<description>Some helpful tips. And additionally try --offline..
6 tips to speed up your Gradle build</description>
			<content type="html"><![CDATA[<p>Some helpful tips. And additionally try <code>--offline</code>..</p>
<p><a href="https://medium.com/@shelajev/6-tips-to-speed-up-your-gradle-build-3d98791d3df9#.gnibwralv%22%3Ehttps://medium.com/@shelajev/6-tips-to-speed-up-your-gradle-build-3d98791d3df9#.gnibwralv">6 tips to speed up your Gradle build</a></p>
]]></content>
		</item>
		
		<item>
			<title>Change isn&#39;t free</title>
			<link>/posts/change-isnt-free/</link>
			<pubDate>Sun, 01 Nov 2015 19:44:27 +0100</pubDate>
			
			<guid>/posts/change-isnt-free/</guid>
			<description>http://www.mountaingoatsoftware.com/blog/change-isnt-free</description>
			<content type="html"><![CDATA[<p><a href="http://www.mountaingoatsoftware.com/blog/change-isnt-free">http://www.mountaingoatsoftware.com/blog/change-isnt-free</a></p>
]]></content>
		</item>
		
		<item>
			<title>PO and technical debt</title>
			<link>/posts/po-tech-debt/</link>
			<pubDate>Thu, 29 Oct 2015 19:41:53 +0100</pubDate>
			
			<guid>/posts/po-tech-debt/</guid>
			<description>Nice read:
http://www.agileadvice.com/2015/10/24/howtoapplyagile/question-product-owner-and-technical-debt/
 As a product owner, what are the best ways to record technical debt and what are some approaches to prioritizing that work amid the continuous delivery of working software?
 </description>
			<content type="html"><![CDATA[<p>Nice read:<br />
<a href="http://www.agileadvice.com/2015/10/24/howtoapplyagile/question-product-owner-and-technical-debt/">http://www.agileadvice.com/2015/10/24/howtoapplyagile/question-product-owner-and-technical-debt/</a></p>
<blockquote>
<p>As a product owner, what are the best ways to record technical debt and what are some approaches to prioritizing that work amid the continuous delivery of working software?</p>
</blockquote>
]]></content>
		</item>
		
	</channel>
</rss>
